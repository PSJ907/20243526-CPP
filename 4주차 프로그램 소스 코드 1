// 자식 클래스 예제
// 탈 것 (크루즈)

#include <iostream>
using namespace std;

class Vehicle
{
private:
    int person = 0;    // 탑승인원
    int baggage = 0;   // 화물 무게
public:
    void ride()  // 탑승
    {
        person++;
    }
    void load(int weight) { baggage += weight; }   // 짐 싣기 (클래스 내부에서 정의)
    void getOff() { if (person > 0) person--; }    // 하차 (클래스 내부에서 정의)
    int getPerson()  // 탑승인원 확인
    {
        return person;
    }
};

class Cruise :public Vehicle
{
private:
    int room;
public:
    void setRoom(int r) { room = r; }    // 크루즈의 방 수 설정 (클래스 내부에서 정의)
    void countPerson()
    {
        cout << Vehicle::getPerson() << endl;     // 부모클래스 호출
    }
};

class AirPlane :public Vehicle
{
private:
    int seat;
public:
    void setSeat(int s) { seat = s; }    // 자리 수 설정 (클래스 내부에서 정의)
    void countPerson()    // 탑승인원 확인
    {
        cout << Vehicle::getPerson() << endl;     // 부모클래스 호출
    }
};

int main(int argc, char const* argv[])
{
    Cruise dolphin;
    dolphin.ride();    // 부모클래스 멤버함수  접근
    dolphin.load(10);  // 부모클래스 멤버함수  접근
    dolphin.countPerson();     // 자식클래스 멤버함수 호출

    AirPlane cppAir;
    cppAir.ride();    // 부모클래스의 멤버함수 접근
    cppAir.load(20);  // 부모클래스 멤버함수  접근 
    cppAir.countPerson();     // 자식클래스 멤버함수 호출
    cppAir.ride();      // 탑승 1인 증가
    cppAir.ride();      // 탑승 1인 증가
    cppAir.countPerson();   // 자식클래스 멤버함수 호출 (인원 증가 결과)
}
